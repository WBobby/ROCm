parameters:
- name: checkoutRepo
  type: string
  default: 'self'
- name: checkoutRef
  type: string
  default: ''
- name: aptPackages
  type: object
  default:
    - python3-pip
    - cmake
    - ninja-build
    - git
    - libcap-dev
    - protobuf-compiler
    - build-essential
    - autoconf
    - libtool
    - pkg-config
- name: rocmDependencies
  type: object
  default:
    - rocm-cmake
    - llvm-project
    - ROCR-Runtime
    - clr
    - rocminfo
    - rocm-smi-lib

jobs:
- job: rdc
  variables:
  - group: common
  - template: /.azuredevops/variables-global.yml
  pool: ${{ variables.MEDIUM_BUILD_POOL }}
  workspace:
    clean: all
  steps:
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-other.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/checkout.yml
    parameters:
      checkoutRepo: ${{ parameters.checkoutRepo }}
  # CI case: download latest default branch build
  - ${{ if eq(parameters.checkoutRef, '') }}:
    - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
      parameters:
        dependencyList: ${{ parameters.rocmDependencies }}
        dependencySource: staging
  # manual build case: triggered by ROCm/ROCm repo
  - ${{ if ne(parameters.checkoutRef, '') }}:
    - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
      parameters:
        dependencyList: ${{ parameters.rocmDependencies }}
        dependencySource: tag-builds
# Build grpc
  - task: Bash@3
    displayName: 'git clone grpc'
    inputs:
      targetType: inline
      script: git clone -b v1.61.0 https://github.com/grpc/grpc --depth=1 --shallow-submodules --recurse-submodules
      workingDirectory: $(Build.SourcesDirectory)
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/build-cmake.yml
    parameters:
      cmakeBuildDir: $(Build.SourcesDirectory)/grpc/build
      installDir: $(Build.SourcesDirectory)/bin
      extraBuildFlags: >-
        -DgRPC_INSTALL=ON
        -DgRPC_BUILD_TESTS=OFF
        -DBUILD_SHARED_LIBS=ON
        -DCMAKE_INSTALL_LIBDIR=lib
        -DCMAKE_BUILD_TYPE=Release
        -GNinja
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/build-cmake.yml
    parameters:
      extraBuildFlags: >-
        -DCMAKE_PREFIX_PATH=$(Agent.BuildDirectory)/rocm
        -DGRPC_ROOT="$(Build.SourcesDirectory)/bin"
        -DBUILD_TESTS=ON
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/artifact-upload.yml
